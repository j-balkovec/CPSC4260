OVERALL:
- Implement REFACTOR methods
- Logging if necessary
- Loading bars
- Threading
- Print in color
- info messages in color @ see analyze.py (generate_readable_report)
- TXT report to HTML somewhere down the road

BUG:
- The Application is very slow and unresponsive

TODAY:
- Split up analyze.py
- Fix find duplicated code problem
- Refactor method
- [maybe] fix gui problem...shift to terminal only or use the terminal GUI only...ideally would have 2 options

- Do the backend part first, figure out the frontend later

ISSUES:
 - GUI
 - Need to somehow remove residual function body + signature

NOTE:

 - Note all the try-catch blocks in main to exit gracefully
 - Jaccard similarity is JANK!!! 
     - The implementation is behaving as expected for strict trigram-based Jaccard, 
       but the metric is too brittle for small code snippets.



Fix Strategy (Summary)
	•	Validate entire logical blocks (e.g., three lines inside an if block or full loops) only if they are context-free and can be safely refactored.
	•	When replacing blocks:
	•	Don’t call the extracted function globally.
	•	Preserve indentation.
	•	Replace the duplicated block in-place, not just extract and call.

Problems:
•	Matching signatures (not checking or preserving args)
•	Assuming identical return type

NEEDS PYTHON 3.8 DUE TO THE 'ast' MODULE ["end_lineno"]